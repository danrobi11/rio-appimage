name: Build Rio Terminal Portable Binary

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build tools and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential curl tar pkg-config zip \
            git wget patchelf \
            rustc cargo \
            libxkbcommon-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev \
            libx11-dev libxcb1-dev libxkbcommon-x11-dev libwayland-dev \
            libfontconfig-dev fonts-dejavu-core
      - name: Download Rio Terminal v0.2.15 source
        run: |
          mkdir -p ~/rio-build
          cd ~/rio-build
          wget "https://github.com/raphamorim/rio/archive/refs/tags/v0.2.15.tar.gz" -O rio-0.2.15.tar.gz
          tar -xzf rio-0.2.15.tar.gz
      - name: Patch sugarloaf for font fallback
        run: |
          cd ~/rio-build/rio-0.2.15
          echo 'pub const DEJAVU_SANS_MONO: &[u8] = include_bytes!("DejaVuSansMono.ttf");' >> sugarloaf/src/font/mod.rs
          cp /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf sugarloaf/src/font/
          sed -i 's/FontRef::from_index(\([^)]*\))\.unwrap()/FontRef::from_index(\1).unwrap_or_else(|| { eprintln!("Font not found, using bundled DejaVu Sans Mono"); FontRef::from_index(DEJAVU_SANS_MONO, 0).expect("Bundled DejaVu Sans Mono index missing") })/' sugarloaf/src/font/mod.rs || true
          echo "Applied font fallback patch"
      - name: Patch grid storage to prevent capacity overflow
        run: |
          cd ~/rio-build/rio-0.2.15
          sed -i 's|pub fn new(cols: usize, rows: usize) -> Self {|pub fn new(cols: usize, rows: usize) -> Self { let cols = cols.min(1024); let rows = rows.min(1024); let capacity = cols.checked_mul(rows).unwrap_or(1024 * 1024);|' rio-backend/src/crosswords/grid/storage.rs || true
          sed -i 's|Vec::with_capacity(cols \* rows)|Vec::with_capacity(capacity)|' rio-backend/src/crosswords/grid/storage.rs || true
          echo "Patched grid storage with safe capacity"
      - name: Build Rio Terminal
        run: |
          cd ~/rio-build/rio-0.2.15
          cargo build --release
      - name: Install Rio to staging directory
        run: |
          mkdir -p ~/rio-install/usr/bin
          cp ~/rio-build/rio-0.2.15/target/release/rio ~/rio-install/usr/bin/rio-bin
      - name: Bundle all shared library dependencies
        run: |
          cd ~/rio-install
          mkdir -p usr/lib
          chmod +w usr/bin/rio-bin
          ldd usr/bin/rio-bin | grep -o '/[^ ]*\.so[^ ]*' | sort -u | while read lib; do
            cp -v "$lib" usr/lib/ || { echo "Error: Failed to copy $lib"; exit 1; }
          done
          cp -v /usr/lib/x86_64-linux-gnu/libfontconfig.so.1 usr/lib/
          cp -v /usr/lib/x86_64-linux-gnu/libxkbcommon-x11.so.0 usr/lib/
          cp -v /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2 usr/lib/
          ls -l usr/lib/
      - name: Bundle font files and fontconfig config
        run: |
          cd ~/rio-install
          mkdir -p usr/share/fonts/truetype/dejavu
          cp -v /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf usr/share/fonts/truetype/dejavu/
          mkdir -p usr/etc/fonts
          cat > usr/etc/fonts/fonts.conf << EOF
          <?xml version="1.0"?>
          <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
          <fontconfig>
            <dir>/home/danrobi/Downloads/rio-portable/rio-0.2.15-portable/usr/share/fonts</dir>
            <cachedir>/home/danrobi/Downloads/rio-portable/rio-0.2.15-portable/usr/cache</cachedir>
          </fontconfig>
          EOF
          mkdir -p usr/cache
          export FONTCONFIG_FILE=$PWD/usr/etc/fonts/fonts.conf
          fc-cache -fv /home/danrobi/Downloads/rio-portable/rio-0.2.15-portable/usr/share/fonts
      - name: Ensure RPATH with patchelf
        run: |
          cd ~/rio-install
          patchelf --force-rpath --set-rpath \$ORIGIN/../lib usr/bin/rio-bin
      - name: Create configuration file with font specification
        run: |
          cd ~/rio-install
          mkdir -p usr/config
          rm -f usr/config/config.toml
          cat > usr/config/config.toml << 'EOF'
          use-fork = false
          [fonts]
          regular = { family = "DejaVu Sans Mono", style = "Normal" }
          [cursor]
          shape = "block"
          blinking = false
          [colors]
          background = "#000000"
          foreground = "#00FFFF"
          cursor = "#00FF00"
          tabs = "#000000"
          tabs-active = "#00FF00"
          selection-foreground = "#00FFFF"
          selection-background = "#000000"
          black = "#000000"
          EOF
          chmod 644 usr/config/config.toml
          echo "Config contents after creation:"
          cat usr/config/config.toml
      - name: Create launcher script
        run: |
          cd ~/rio-install/usr/bin
          cat > rio << EOF
          #!/bin/bash
          DIR="\$(dirname "\$(realpath "\$0")")"
          export FONTCONFIG_FILE="\$DIR/../etc/fonts/fonts.conf"
          echo "Using FONTCONFIG_FILE: \$FONTCONFIG_FILE"
          ls -l "\$FONTCONFIG_FILE" || echo "Fontconfig file not found!"
          fc-list | grep "DejaVu Sans Mono" || echo "DejaVu Sans Mono not found in fontconfig!"
          CONFIG="\$DIR/../config/config.toml"
          mkdir -p ~/.config/rio
          cp "\$CONFIG" ~/.config/rio/config.toml || { echo "Failed to copy config"; exit 1; }
          chmod 644 ~/.config/rio/config.toml
          echo "Using config: ~/.config/rio/config.toml"
          cat ~/.config/rio/config.toml
          "\$DIR/../lib/ld-linux-x86-64.so.2" --library-path "\$DIR/../lib" "\$DIR/rio-bin" "\$@"
          echo "Rio closed. Checking ~/.config/rio/:"
          ls -ld ~/.config/rio/
          ls -l ~/.config/rio/config.toml
          EOF
          chmod +x rio
          cat rio
      - name: Create zip file with binary and libraries
        run: |
          cd ~/rio-install
          zip -r ~/rio-0.2.15-portable.zip .
      - name: Generate SHA256 checksum
        run: |
          sha256sum ~/rio-0.2.15-portable.zip > ~/rio-0.2.15-portable.zip.sha256
          cat ~/rio-0.2.15-portable.zip.sha256
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: rio-portable
          path: |
            ~/rio-0.2.15-portable.zip
            ~/rio-0.2.15-portable.zip.sha256
